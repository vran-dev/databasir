/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.enums.OAuthAppType;
import com.databasir.dao.tables.OauthAppTable;
import com.databasir.dao.tables.pojos.OauthApp;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * oauth app info
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthAppRecord extends UpdatableRecordImpl<OauthAppRecord> implements Record7<Integer, String, String, String, OAuthAppType, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.oauth_app.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.oauth_app.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.oauth_app.registration_id</code>.
     */
    public void setRegistrationId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.oauth_app.registration_id</code>.
     */
    public String getRegistrationId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>databasir.oauth_app.app_name</code>.
     */
    public void setAppName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.oauth_app.app_name</code>.
     */
    public String getAppName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>databasir.oauth_app.app_icon</code>.
     */
    public void setAppIcon(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.oauth_app.app_icon</code>.
     */
    public String getAppIcon() {
        return (String) get(3);
    }

    /**
     * Setter for <code>databasir.oauth_app.app_type</code>. github, gitlab
     */
    public void setAppType(OAuthAppType value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.oauth_app.app_type</code>. github, gitlab
     */
    public OAuthAppType getAppType() {
        return (OAuthAppType) get(4);
    }

    /**
     * Setter for <code>databasir.oauth_app.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.oauth_app.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>databasir.oauth_app.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>databasir.oauth_app.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, OAuthAppType, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, OAuthAppType, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return OauthAppTable.OAUTH_APP.ID;
    }

    @Override
    public Field<String> field2() {
        return OauthAppTable.OAUTH_APP.REGISTRATION_ID;
    }

    @Override
    public Field<String> field3() {
        return OauthAppTable.OAUTH_APP.APP_NAME;
    }

    @Override
    public Field<String> field4() {
        return OauthAppTable.OAUTH_APP.APP_ICON;
    }

    @Override
    public Field<OAuthAppType> field5() {
        return OauthAppTable.OAUTH_APP.APP_TYPE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return OauthAppTable.OAUTH_APP.UPDATE_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return OauthAppTable.OAUTH_APP.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRegistrationId();
    }

    @Override
    public String component3() {
        return getAppName();
    }

    @Override
    public String component4() {
        return getAppIcon();
    }

    @Override
    public OAuthAppType component5() {
        return getAppType();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime component7() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRegistrationId();
    }

    @Override
    public String value3() {
        return getAppName();
    }

    @Override
    public String value4() {
        return getAppIcon();
    }

    @Override
    public OAuthAppType value5() {
        return getAppType();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime value7() {
        return getCreateAt();
    }

    @Override
    public OauthAppRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OauthAppRecord value2(String value) {
        setRegistrationId(value);
        return this;
    }

    @Override
    public OauthAppRecord value3(String value) {
        setAppName(value);
        return this;
    }

    @Override
    public OauthAppRecord value4(String value) {
        setAppIcon(value);
        return this;
    }

    @Override
    public OauthAppRecord value5(OAuthAppType value) {
        setAppType(value);
        return this;
    }

    @Override
    public OauthAppRecord value6(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public OauthAppRecord value7(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public OauthAppRecord values(Integer value1, String value2, String value3, String value4, OAuthAppType value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OauthAppRecord
     */
    public OauthAppRecord() {
        super(OauthAppTable.OAUTH_APP);
    }

    /**
     * Create a detached, initialised OauthAppRecord
     */
    public OauthAppRecord(Integer id, String registrationId, String appName, String appIcon, OAuthAppType appType, LocalDateTime updateAt, LocalDateTime createAt) {
        super(OauthAppTable.OAUTH_APP);

        setId(id);
        setRegistrationId(registrationId);
        setAppName(appName);
        setAppIcon(appIcon);
        setAppType(appType);
        setUpdateAt(updateAt);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised OauthAppRecord
     */
    public OauthAppRecord(OauthApp value) {
        super(OauthAppTable.OAUTH_APP);

        if (value != null) {
            setId(value.getId());
            setRegistrationId(value.getRegistrationId());
            setAppName(value.getAppName());
            setAppIcon(value.getAppIcon());
            setAppType(value.getAppType());
            setUpdateAt(value.getUpdateAt());
            setCreateAt(value.getCreateAt());
        }
    }
}
