/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.TableColumnDocumentTable;
import com.databasir.dao.tables.pojos.TableColumnDocument;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableColumnDocumentRecord extends UpdatableRecordImpl<TableColumnDocumentRecord> implements Record14<Integer, Integer, Integer, String, String, Integer, String, String, Integer, Integer, Boolean, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.table_column_document.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>databasir.table_column_document.table_document_id</code>.
     */
    public void setTableDocumentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>databasir.table_column_document.table_document_id</code>.
     */
    public Integer getTableDocumentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>databasir.table_column_document.database_document_id</code>.
     */
    public void setDatabaseDocumentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>databasir.table_column_document.database_document_id</code>.
     */
    public Integer getDatabaseDocumentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>databasir.table_column_document.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>databasir.table_column_document.type</code>.
     */
    public void setType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.type</code>.
     */
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>databasir.table_column_document.data_type</code>.
     */
    public void setDataType(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.data_type</code>.
     */
    public Integer getDataType() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>databasir.table_column_document.comment</code>.
     */
    public void setComment(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.comment</code>.
     */
    public String getComment() {
        return (String) get(6);
    }

    /**
     * Setter for <code>databasir.table_column_document.default_value</code>.
     */
    public void setDefaultValue(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.default_value</code>.
     */
    public String getDefaultValue() {
        return (String) get(7);
    }

    /**
     * Setter for <code>databasir.table_column_document.size</code>.
     */
    public void setSize(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.size</code>.
     */
    public Integer getSize() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>databasir.table_column_document.decimal_digits</code>.
     */
    public void setDecimalDigits(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.decimal_digits</code>.
     */
    public Integer getDecimalDigits() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>databasir.table_column_document.is_primary_key</code>.
     */
    public void setIsPrimaryKey(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.is_primary_key</code>.
     */
    public Boolean getIsPrimaryKey() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>databasir.table_column_document.nullable</code>. YES,
     * NO, UNKNOWN
     */
    public void setNullable(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.nullable</code>. YES,
     * NO, UNKNOWN
     */
    public String getNullable() {
        return (String) get(11);
    }

    /**
     * Setter for <code>databasir.table_column_document.auto_increment</code>.
     * YES, NO, UNKNOWN
     */
    public void setAutoIncrement(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.auto_increment</code>.
     * YES, NO, UNKNOWN
     */
    public String getAutoIncrement() {
        return (String) get(12);
    }

    /**
     * Setter for <code>databasir.table_column_document.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>databasir.table_column_document.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, Integer, Integer, String, String, Integer, String, String, Integer, Integer, Boolean, String, String, LocalDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, Integer, Integer, String, String, Integer, String, String, Integer, Integer, Boolean, String, String, LocalDateTime> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.TABLE_DOCUMENT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.DATABASE_DOCUMENT_ID;
    }

    @Override
    public Field<String> field4() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.NAME;
    }

    @Override
    public Field<String> field5() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.TYPE;
    }

    @Override
    public Field<Integer> field6() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.DATA_TYPE;
    }

    @Override
    public Field<String> field7() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.COMMENT;
    }

    @Override
    public Field<String> field8() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.DEFAULT_VALUE;
    }

    @Override
    public Field<Integer> field9() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.SIZE;
    }

    @Override
    public Field<Integer> field10() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.DECIMAL_DIGITS;
    }

    @Override
    public Field<Boolean> field11() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.IS_PRIMARY_KEY;
    }

    @Override
    public Field<String> field12() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.NULLABLE;
    }

    @Override
    public Field<String> field13() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.AUTO_INCREMENT;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getTableDocumentId();
    }

    @Override
    public Integer component3() {
        return getDatabaseDocumentId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public Integer component6() {
        return getDataType();
    }

    @Override
    public String component7() {
        return getComment();
    }

    @Override
    public String component8() {
        return getDefaultValue();
    }

    @Override
    public Integer component9() {
        return getSize();
    }

    @Override
    public Integer component10() {
        return getDecimalDigits();
    }

    @Override
    public Boolean component11() {
        return getIsPrimaryKey();
    }

    @Override
    public String component12() {
        return getNullable();
    }

    @Override
    public String component13() {
        return getAutoIncrement();
    }

    @Override
    public LocalDateTime component14() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getTableDocumentId();
    }

    @Override
    public Integer value3() {
        return getDatabaseDocumentId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public Integer value6() {
        return getDataType();
    }

    @Override
    public String value7() {
        return getComment();
    }

    @Override
    public String value8() {
        return getDefaultValue();
    }

    @Override
    public Integer value9() {
        return getSize();
    }

    @Override
    public Integer value10() {
        return getDecimalDigits();
    }

    @Override
    public Boolean value11() {
        return getIsPrimaryKey();
    }

    @Override
    public String value12() {
        return getNullable();
    }

    @Override
    public String value13() {
        return getAutoIncrement();
    }

    @Override
    public LocalDateTime value14() {
        return getCreateAt();
    }

    @Override
    public TableColumnDocumentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value2(Integer value) {
        setTableDocumentId(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value3(Integer value) {
        setDatabaseDocumentId(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value6(Integer value) {
        setDataType(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value7(String value) {
        setComment(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value8(String value) {
        setDefaultValue(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value9(Integer value) {
        setSize(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value10(Integer value) {
        setDecimalDigits(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value11(Boolean value) {
        setIsPrimaryKey(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value12(String value) {
        setNullable(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value13(String value) {
        setAutoIncrement(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord value14(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public TableColumnDocumentRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, Integer value6, String value7, String value8, Integer value9, Integer value10, Boolean value11, String value12, String value13, LocalDateTime value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TableColumnDocumentRecord
     */
    public TableColumnDocumentRecord() {
        super(TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT);
    }

    /**
     * Create a detached, initialised TableColumnDocumentRecord
     */
    public TableColumnDocumentRecord(Integer id, Integer tableDocumentId, Integer databaseDocumentId, String name, String type, Integer dataType, String comment, String defaultValue, Integer size, Integer decimalDigits, Boolean isPrimaryKey, String nullable, String autoIncrement, LocalDateTime createAt) {
        super(TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT);

        setId(id);
        setTableDocumentId(tableDocumentId);
        setDatabaseDocumentId(databaseDocumentId);
        setName(name);
        setType(type);
        setDataType(dataType);
        setComment(comment);
        setDefaultValue(defaultValue);
        setSize(size);
        setDecimalDigits(decimalDigits);
        setIsPrimaryKey(isPrimaryKey);
        setNullable(nullable);
        setAutoIncrement(autoIncrement);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised TableColumnDocumentRecord
     */
    public TableColumnDocumentRecord(TableColumnDocument value) {
        super(TableColumnDocumentTable.TABLE_COLUMN_DOCUMENT);

        if (value != null) {
            setId(value.getId());
            setTableDocumentId(value.getTableDocumentId());
            setDatabaseDocumentId(value.getDatabaseDocumentId());
            setName(value.getName());
            setType(value.getType());
            setDataType(value.getDataType());
            setComment(value.getComment());
            setDefaultValue(value.getDefaultValue());
            setSize(value.getSize());
            setDecimalDigits(value.getDecimalDigits());
            setIsPrimaryKey(value.getIsPrimaryKey());
            setNullable(value.getNullable());
            setAutoIncrement(value.getAutoIncrement());
            setCreateAt(value.getCreateAt());
        }
    }
}
