/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.enums.ProjectSyncTaskStatus;
import com.databasir.dao.tables.ProjectSyncTaskTable;
import com.databasir.dao.tables.pojos.ProjectSyncTask;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectSyncTaskRecord extends UpdatableRecordImpl<ProjectSyncTaskRecord> implements Record8<Integer, Integer, Integer, ProjectSyncTaskStatus, String, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.project_sync_task.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.project_sync_task.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>databasir.project_sync_task.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>databasir.project_sync_task.status</code>. NEW  RUNNING 
     * FINISHED  FAILED  CANCELED
     */
    public void setStatus(ProjectSyncTaskStatus value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.status</code>. NEW  RUNNING 
     * FINISHED  FAILED  CANCELED
     */
    public ProjectSyncTaskStatus getStatus() {
        return (ProjectSyncTaskStatus) get(3);
    }

    /**
     * Setter for <code>databasir.project_sync_task.result</code>.
     */
    public void setResult(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.result</code>.
     */
    public String getResult() {
        return (String) get(4);
    }

    /**
     * Setter for <code>databasir.project_sync_task.run_at</code>.
     */
    public void setRunAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.run_at</code>.
     */
    public LocalDateTime getRunAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>databasir.project_sync_task.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>databasir.project_sync_task.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>databasir.project_sync_task.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, ProjectSyncTaskStatus, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, Integer, ProjectSyncTaskStatus, String, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.PROJECT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.USER_ID;
    }

    @Override
    public Field<ProjectSyncTaskStatus> field4() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.STATUS;
    }

    @Override
    public Field<String> field5() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.RESULT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.RUN_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.UPDATE_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return ProjectSyncTaskTable.PROJECT_SYNC_TASK.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getProjectId();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public ProjectSyncTaskStatus component4() {
        return getStatus();
    }

    @Override
    public String component5() {
        return getResult();
    }

    @Override
    public LocalDateTime component6() {
        return getRunAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime component8() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getProjectId();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public ProjectSyncTaskStatus value4() {
        return getStatus();
    }

    @Override
    public String value5() {
        return getResult();
    }

    @Override
    public LocalDateTime value6() {
        return getRunAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime value8() {
        return getCreateAt();
    }

    @Override
    public ProjectSyncTaskRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord value2(Integer value) {
        setProjectId(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord value4(ProjectSyncTaskStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord value5(String value) {
        setResult(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord value6(LocalDateTime value) {
        setRunAt(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord value7(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord value8(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public ProjectSyncTaskRecord values(Integer value1, Integer value2, Integer value3, ProjectSyncTaskStatus value4, String value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectSyncTaskRecord
     */
    public ProjectSyncTaskRecord() {
        super(ProjectSyncTaskTable.PROJECT_SYNC_TASK);
    }

    /**
     * Create a detached, initialised ProjectSyncTaskRecord
     */
    public ProjectSyncTaskRecord(Integer id, Integer projectId, Integer userId, ProjectSyncTaskStatus status, String result, LocalDateTime runAt, LocalDateTime updateAt, LocalDateTime createAt) {
        super(ProjectSyncTaskTable.PROJECT_SYNC_TASK);

        setId(id);
        setProjectId(projectId);
        setUserId(userId);
        setStatus(status);
        setResult(result);
        setRunAt(runAt);
        setUpdateAt(updateAt);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised ProjectSyncTaskRecord
     */
    public ProjectSyncTaskRecord(ProjectSyncTask value) {
        super(ProjectSyncTaskTable.PROJECT_SYNC_TASK);

        if (value != null) {
            setId(value.getId());
            setProjectId(value.getProjectId());
            setUserId(value.getUserId());
            setStatus(value.getStatus());
            setResult(value.getResult());
            setRunAt(value.getRunAt());
            setUpdateAt(value.getUpdateAt());
            setCreateAt(value.getCreateAt());
        }
    }
}
