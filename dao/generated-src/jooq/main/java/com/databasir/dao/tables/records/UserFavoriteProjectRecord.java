/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.UserFavoriteProject;
import com.databasir.dao.tables.pojos.UserFavoriteProjectPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserFavoriteProjectRecord extends UpdatableRecordImpl<UserFavoriteProjectRecord> implements Record4<Integer, Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.user_favorite_project.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.user_favorite_project.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.user_favorite_project.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.user_favorite_project.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>databasir.user_favorite_project.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.user_favorite_project.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>databasir.user_favorite_project.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.user_favorite_project.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserFavoriteProject.USER_FAVORITE_PROJECT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return UserFavoriteProject.USER_FAVORITE_PROJECT.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return UserFavoriteProject.USER_FAVORITE_PROJECT.PROJECT_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UserFavoriteProject.USER_FAVORITE_PROJECT.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getProjectId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getProjectId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateAt();
    }

    @Override
    public UserFavoriteProjectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserFavoriteProjectRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserFavoriteProjectRecord value3(Integer value) {
        setProjectId(value);
        return this;
    }

    @Override
    public UserFavoriteProjectRecord value4(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public UserFavoriteProjectRecord values(Integer value1, Integer value2, Integer value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserFavoriteProjectRecord
     */
    public UserFavoriteProjectRecord() {
        super(UserFavoriteProject.USER_FAVORITE_PROJECT);
    }

    /**
     * Create a detached, initialised UserFavoriteProjectRecord
     */
    public UserFavoriteProjectRecord(Integer id, Integer userId, Integer projectId, LocalDateTime createAt) {
        super(UserFavoriteProject.USER_FAVORITE_PROJECT);

        setId(id);
        setUserId(userId);
        setProjectId(projectId);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised UserFavoriteProjectRecord
     */
    public UserFavoriteProjectRecord(UserFavoriteProjectPojo value) {
        super(UserFavoriteProject.USER_FAVORITE_PROJECT);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setProjectId(value.getProjectId());
            setCreateAt(value.getCreateAt());
        }
    }
}
