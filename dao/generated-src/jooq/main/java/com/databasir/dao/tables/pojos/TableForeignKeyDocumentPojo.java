/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableForeignKeyDocumentPojo implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       id;
    private Integer       tableDocumentId;
    private Integer       databaseDocumentId;
    private String        fkName;
    private String        fkTableName;
    private String        fkColumnName;
    private String        pkName;
    private String        pkTableName;
    private String        pkColumnName;
    private String        updateRule;
    private String        deleteRule;
    private LocalDateTime createAt;

    public TableForeignKeyDocumentPojo() {}

    public TableForeignKeyDocumentPojo(TableForeignKeyDocumentPojo value) {
        this.id = value.id;
        this.tableDocumentId = value.tableDocumentId;
        this.databaseDocumentId = value.databaseDocumentId;
        this.fkName = value.fkName;
        this.fkTableName = value.fkTableName;
        this.fkColumnName = value.fkColumnName;
        this.pkName = value.pkName;
        this.pkTableName = value.pkTableName;
        this.pkColumnName = value.pkColumnName;
        this.updateRule = value.updateRule;
        this.deleteRule = value.deleteRule;
        this.createAt = value.createAt;
    }

    public TableForeignKeyDocumentPojo(
        Integer       id,
        Integer       tableDocumentId,
        Integer       databaseDocumentId,
        String        fkName,
        String        fkTableName,
        String        fkColumnName,
        String        pkName,
        String        pkTableName,
        String        pkColumnName,
        String        updateRule,
        String        deleteRule,
        LocalDateTime createAt
    ) {
        this.id = id;
        this.tableDocumentId = tableDocumentId;
        this.databaseDocumentId = databaseDocumentId;
        this.fkName = fkName;
        this.fkTableName = fkTableName;
        this.fkColumnName = fkColumnName;
        this.pkName = pkName;
        this.pkTableName = pkTableName;
        this.pkColumnName = pkColumnName;
        this.updateRule = updateRule;
        this.deleteRule = deleteRule;
        this.createAt = createAt;
    }

    /**
     * Getter for <code>databasir.table_foreign_key_document.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>databasir.table_foreign_key_document.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for
     * <code>databasir.table_foreign_key_document.table_document_id</code>.
     */
    public Integer getTableDocumentId() {
        return this.tableDocumentId;
    }

    /**
     * Setter for
     * <code>databasir.table_foreign_key_document.table_document_id</code>.
     */
    public void setTableDocumentId(Integer tableDocumentId) {
        this.tableDocumentId = tableDocumentId;
    }

    /**
     * Getter for
     * <code>databasir.table_foreign_key_document.database_document_id</code>.
     */
    public Integer getDatabaseDocumentId() {
        return this.databaseDocumentId;
    }

    /**
     * Setter for
     * <code>databasir.table_foreign_key_document.database_document_id</code>.
     */
    public void setDatabaseDocumentId(Integer databaseDocumentId) {
        this.databaseDocumentId = databaseDocumentId;
    }

    /**
     * Getter for <code>databasir.table_foreign_key_document.fk_name</code>.
     */
    public String getFkName() {
        return this.fkName;
    }

    /**
     * Setter for <code>databasir.table_foreign_key_document.fk_name</code>.
     */
    public void setFkName(String fkName) {
        this.fkName = fkName;
    }

    /**
     * Getter for
     * <code>databasir.table_foreign_key_document.fk_table_name</code>.
     */
    public String getFkTableName() {
        return this.fkTableName;
    }

    /**
     * Setter for
     * <code>databasir.table_foreign_key_document.fk_table_name</code>.
     */
    public void setFkTableName(String fkTableName) {
        this.fkTableName = fkTableName;
    }

    /**
     * Getter for
     * <code>databasir.table_foreign_key_document.fk_column_name</code>.
     */
    public String getFkColumnName() {
        return this.fkColumnName;
    }

    /**
     * Setter for
     * <code>databasir.table_foreign_key_document.fk_column_name</code>.
     */
    public void setFkColumnName(String fkColumnName) {
        this.fkColumnName = fkColumnName;
    }

    /**
     * Getter for <code>databasir.table_foreign_key_document.pk_name</code>.
     */
    public String getPkName() {
        return this.pkName;
    }

    /**
     * Setter for <code>databasir.table_foreign_key_document.pk_name</code>.
     */
    public void setPkName(String pkName) {
        this.pkName = pkName;
    }

    /**
     * Getter for
     * <code>databasir.table_foreign_key_document.pk_table_name</code>.
     */
    public String getPkTableName() {
        return this.pkTableName;
    }

    /**
     * Setter for
     * <code>databasir.table_foreign_key_document.pk_table_name</code>.
     */
    public void setPkTableName(String pkTableName) {
        this.pkTableName = pkTableName;
    }

    /**
     * Getter for
     * <code>databasir.table_foreign_key_document.pk_column_name</code>.
     */
    public String getPkColumnName() {
        return this.pkColumnName;
    }

    /**
     * Setter for
     * <code>databasir.table_foreign_key_document.pk_column_name</code>.
     */
    public void setPkColumnName(String pkColumnName) {
        this.pkColumnName = pkColumnName;
    }

    /**
     * Getter for <code>databasir.table_foreign_key_document.update_rule</code>.
     * NO_ACTION, CASCADE, SET_NULL, SET_DEFAULT
     */
    public String getUpdateRule() {
        return this.updateRule;
    }

    /**
     * Setter for <code>databasir.table_foreign_key_document.update_rule</code>.
     * NO_ACTION, CASCADE, SET_NULL, SET_DEFAULT
     */
    public void setUpdateRule(String updateRule) {
        this.updateRule = updateRule;
    }

    /**
     * Getter for <code>databasir.table_foreign_key_document.delete_rule</code>.
     * NO_ACTION, CASCADE, SET_NULL, SET_DEFAULT
     */
    public String getDeleteRule() {
        return this.deleteRule;
    }

    /**
     * Setter for <code>databasir.table_foreign_key_document.delete_rule</code>.
     * NO_ACTION, CASCADE, SET_NULL, SET_DEFAULT
     */
    public void setDeleteRule(String deleteRule) {
        this.deleteRule = deleteRule;
    }

    /**
     * Getter for <code>databasir.table_foreign_key_document.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return this.createAt;
    }

    /**
     * Setter for <code>databasir.table_foreign_key_document.create_at</code>.
     */
    public void setCreateAt(LocalDateTime createAt) {
        this.createAt = createAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TableForeignKeyDocumentPojo (");

        sb.append(id);
        sb.append(", ").append(tableDocumentId);
        sb.append(", ").append(databaseDocumentId);
        sb.append(", ").append(fkName);
        sb.append(", ").append(fkTableName);
        sb.append(", ").append(fkColumnName);
        sb.append(", ").append(pkName);
        sb.append(", ").append(pkTableName);
        sb.append(", ").append(pkColumnName);
        sb.append(", ").append(updateRule);
        sb.append(", ").append(deleteRule);
        sb.append(", ").append(createAt);

        sb.append(")");
        return sb.toString();
    }
}
