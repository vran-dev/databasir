/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.DatabaseDocumentTable;
import com.databasir.dao.tables.pojos.DatabaseDocument;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatabaseDocumentRecord extends UpdatableRecordImpl<DatabaseDocumentRecord> implements Record10<Integer, Integer, String, String, String, String, Long, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.database_document.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.database_document.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.database_document.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.database_document.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>databasir.database_document.database_name</code>.
     */
    public void setDatabaseName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.database_document.database_name</code>.
     */
    public String getDatabaseName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>databasir.database_document.schema_name</code>.
     */
    public void setSchemaName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.database_document.schema_name</code>.
     */
    public String getSchemaName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>databasir.database_document.product_name</code>.
     */
    public void setProductName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.database_document.product_name</code>.
     */
    public String getProductName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>databasir.database_document.product_version</code>.
     */
    public void setProductVersion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.database_document.product_version</code>.
     */
    public String getProductVersion() {
        return (String) get(5);
    }

    /**
     * Setter for <code>databasir.database_document.version</code>.
     */
    public void setVersion(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>databasir.database_document.version</code>.
     */
    public Long getVersion() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>databasir.database_document.is_archive</code>.
     */
    public void setIsArchive(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>databasir.database_document.is_archive</code>.
     */
    public Boolean getIsArchive() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>databasir.database_document.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>databasir.database_document.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>databasir.database_document.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>databasir.database_document.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, String, String, String, String, Long, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, Integer, String, String, String, String, Long, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.PROJECT_ID;
    }

    @Override
    public Field<String> field3() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.DATABASE_NAME;
    }

    @Override
    public Field<String> field4() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.SCHEMA_NAME;
    }

    @Override
    public Field<String> field5() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.PRODUCT_NAME;
    }

    @Override
    public Field<String> field6() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.PRODUCT_VERSION;
    }

    @Override
    public Field<Long> field7() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.VERSION;
    }

    @Override
    public Field<Boolean> field8() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.IS_ARCHIVE;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.UPDATE_AT;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return DatabaseDocumentTable.DATABASE_DOCUMENT.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getProjectId();
    }

    @Override
    public String component3() {
        return getDatabaseName();
    }

    @Override
    public String component4() {
        return getSchemaName();
    }

    @Override
    public String component5() {
        return getProductName();
    }

    @Override
    public String component6() {
        return getProductVersion();
    }

    @Override
    public Long component7() {
        return getVersion();
    }

    @Override
    public Boolean component8() {
        return getIsArchive();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime component10() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getProjectId();
    }

    @Override
    public String value3() {
        return getDatabaseName();
    }

    @Override
    public String value4() {
        return getSchemaName();
    }

    @Override
    public String value5() {
        return getProductName();
    }

    @Override
    public String value6() {
        return getProductVersion();
    }

    @Override
    public Long value7() {
        return getVersion();
    }

    @Override
    public Boolean value8() {
        return getIsArchive();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime value10() {
        return getCreateAt();
    }

    @Override
    public DatabaseDocumentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value2(Integer value) {
        setProjectId(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value3(String value) {
        setDatabaseName(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value4(String value) {
        setSchemaName(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value5(String value) {
        setProductName(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value6(String value) {
        setProductVersion(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value7(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value8(Boolean value) {
        setIsArchive(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value9(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord value10(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public DatabaseDocumentRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, Long value7, Boolean value8, LocalDateTime value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatabaseDocumentRecord
     */
    public DatabaseDocumentRecord() {
        super(DatabaseDocumentTable.DATABASE_DOCUMENT);
    }

    /**
     * Create a detached, initialised DatabaseDocumentRecord
     */
    public DatabaseDocumentRecord(Integer id, Integer projectId, String databaseName, String schemaName, String productName, String productVersion, Long version, Boolean isArchive, LocalDateTime updateAt, LocalDateTime createAt) {
        super(DatabaseDocumentTable.DATABASE_DOCUMENT);

        setId(id);
        setProjectId(projectId);
        setDatabaseName(databaseName);
        setSchemaName(schemaName);
        setProductName(productName);
        setProductVersion(productVersion);
        setVersion(version);
        setIsArchive(isArchive);
        setUpdateAt(updateAt);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised DatabaseDocumentRecord
     */
    public DatabaseDocumentRecord(DatabaseDocument value) {
        super(DatabaseDocumentTable.DATABASE_DOCUMENT);

        if (value != null) {
            setId(value.getId());
            setProjectId(value.getProjectId());
            setDatabaseName(value.getDatabaseName());
            setSchemaName(value.getSchemaName());
            setProductName(value.getProductName());
            setProductVersion(value.getProductVersion());
            setVersion(value.getVersion());
            setIsArchive(value.getIsArchive());
            setUpdateAt(value.getUpdateAt());
            setCreateAt(value.getCreateAt());
        }
    }
}
